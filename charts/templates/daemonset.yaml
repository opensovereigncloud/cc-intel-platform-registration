{{ include "validate.logLevel" .Values.log.level }}
{{ include "validate.encoder" .Values.log.encoder }}
{{ include "validate.timeEncoding" .Values.log.timeEncoding }}
{{ include "validate.interval" .Values.registrationIntervalInMinutes }}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "cc-intel-platform-registration.fullname" . }}
  labels:
    {{- include "cc-intel-platform-registration.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cc-intel-platform-registration.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cc-intel-platform-registration.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cc-intel-platform-registration.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["cc-intel-platform-registration"]
          args:
            - "--zap-log-level={{ .Values.log.level }}"
            - "--zap-encoder={{ .Values.log.encoder }}"
            - "--zap-time-encoding={{ .Values.log.timeEncoding }}"
          env:
            - name: CC_IPR_REGISTRATION_INTERVAL_MINUTES
              value: "{{ .Values.registrationIntervalInMinutes }}"
            - name: CC_IPR_REGISTRATION_SERVICE_PORT
              value: "{{ .Values.service.port }}"
          ports:
            - name: metrics
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: metrics
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: efivars
              mountPath: /sys/firmware/efi/efivars
      volumes:
        - name: efivars
          hostPath:
            path: /sys/firmware/efi/efivars
            type: Directory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
